name: Deploy to Google Cloud Run
on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - '.github/**'
      - '.gitignore'

jobs:
  # Set up python environment and build the Docker image
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.11 ]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build Docker image
        run: |
          docker build -t linguatile-backend .

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker authentication
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: Tag Docker image
        run: |
          docker tag linguatile-backend us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/backend-container/linguatile-backend

      - name: Push Docker image to Google Artifact Registry
        run: |
          docker push us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/backend-container/linguatile-backend

  # Deploy the Docker image to Cloud Run
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: linguatile-backend
          image: us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/backend-container/linguatile-backend
          region: us-central1
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          flags: --platform=managed --allow-unauthenticated

      - name: Test the deployed service
        run: |
          curl "${{ steps.deploy.outputs.url }}"
